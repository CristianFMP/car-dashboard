---
# Application to deploy
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: car-dashboard
spec:
  replicas: 2 # tells deployment to run 2 pod matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: car-dashboard
        tier: frontend
    spec:
      containers:
      - name: car-dashboard
        image: registry.au-syd.bluemix.net/iwinoto_gmail_funfactory/car-dashboard:1
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: WORKSPACE_ID
            value: aae86491-04bb-4565-913e-08e5a1bdb40d
        volumeMounts:
          - mountPath: /opt/conversation-service-bind # Mount the "service-bind-volume" volume into the pod.
            name: conversation-service-bind-volume
          - mountPath: /opt/s2t-service-bind # Mount the "service-bind-volume" volume into the pod.
            name: s2t-service-bind-volume
          - mountPath: /opt/t2s-service-bind # Mount the "service-bind-volume" volume into the pod.
            name: t2s-service-bind-volume
      volumes:
        - name: conversation-service-bind-volume
          secret:
            defaultMode: 420
            secretName: binding-my-conversation-service
        - name: s2t-service-bind-volume
          secret:
            defaultMode: 420
            secretName: binding-speech-to-text-service
        - name: t2s-service-bind-volume
          secret:
            defaultMode: 420
            secretName: binding-text-to-speech-service
---
# Service to expose frontend
apiVersion: v1
kind: Service
metadata:
  name: car-dashboard
  labels:
    app: car-dashboard
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  #type: LoadBalancer
  #type: NodePort
  ports:
  - port: 3000 # Internal Port
    protocol: TCP
  #  nodePort: 31513
  selector:
    app: car-dashboard
    tier: frontend
---
# Ingress service
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: car-dashboard-ingress
spec:
  tls:
  - hosts:
    - std.ap-south.containers.mybluemix.net
    secretName: std
  rules:
  - host: std.ap-south.containers.mybluemix.net
    http:
      paths:
      - path: /
        backend:
          serviceName: car-dashboard
          servicePort: 3000
